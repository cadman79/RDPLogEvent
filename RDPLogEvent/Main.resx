<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="statusStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>